name: Build (Ubuntu)

on:
    pull_request:
    workflow_dispatch:

jobs:
    build:
        name: Build plugin for Windows (using docker)
        runs-on: ubuntu-latest

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
              with:
                  submodules: recursive

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v2

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Cache build directory
              id: cache-build
              uses: actions/cache@v4
              with:
                  path: build
                  key: build-${{ runner.os }}-${{ hashFiles('**/CMakeLists.txt') }}
                  restore-keys: |
                      build-${{ runner.os }}-

            - name: Build the Docker image
              if: steps.cache-build.outputs.cache-hit != 'true'
              uses: docker/build-push-action@v6
              with:
                  context: .
                  push: false
                  tags: ukcp-builder:latest
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
                  load: true
                  build-args: |
                      WINDOWS_SDK_VERSION=10.0.22621

            - name: Run CMake
              if: steps.cache-build.outputs.cache-hit != 'true'
              run: |
                  docker run -v ${{ github.workspace }}:/workspace -w /workspace ukcp-builder \
                  /bin/bash -c "cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=\$TOOLCHAIN -G Ninja -B build"

            - name: Build core (Ninja target)
              if: steps.cache-build.outputs.cache-hit != 'true'
              timeout-minutes: 60
              run: |
                  docker run -v ${{ github.workspace }}:/workspace -w /workspace/build ukcp-builder \
                  /bin/bash -c "ninja"

            - name: Upload build directory as artifact
              uses: actions/upload-artifact@v4
              with:
                  name: ukcp-build
                  path: build

    test:
        name: Tests (Windows)
        runs-on: windows-latest
        needs: build
        steps:
            - name: Checkout Code and Submodules
              uses: actions/checkout@v4
              with:
                  submodules: recursive

            - name: Set up Visual Studio Shell
              uses: egor-tensin/vs-shell@v2
              with:
                  arch: x86

            - name: Download build artifact
              uses: actions/download-artifact@v4
              with:
                  name: ukcp-build
                  path: build

            - name: Run Tests
              working-directory: build
              run: |
                  # Update CTest search paths to use Windows paths
                  $content = Get-Content "CTestTestfile.cmake" -Raw
                  $content = $content -replace "/workspace/build", "$PWD"
                  $content | Set-Content "CTestTestfile.cmake"

                  # Also update any subdirectories
                  Get-ChildItem -Recurse -Filter "CTestTestfile.cmake" | ForEach-Object {
                      $subContent = Get-Content $_.FullName -Raw
                      $subContent = $subContent -replace "/workspace/build", "$PWD"
                      $subContent | Set-Content $_.FullName
                  }

                  ctest -C Release --output-on-failure --no-tests=error
